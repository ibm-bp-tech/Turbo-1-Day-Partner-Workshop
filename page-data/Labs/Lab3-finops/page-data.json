{
    "componentChunkName": "component---src-pages-labs-lab-3-finops-mdx",
    "path": "/Labs/Lab3-finops/",
    "result": {"pageContext":{"frontmatter":{"0":"e","1":"x","2":"p","3":"o","4":"r","5":"t","6":" ","7":"c","8":"o","9":"n","10":"s","11":"t","12":" ","13":"T","14":"i","15":"t","16":"l","17":"e","18":" ","19":"=","20":" ","21":"(","22":")","23":" ","24":"=","25":">","26":" ","27":"(","28":" ","29":"<","30":"s","31":"p","32":"a","33":"n","34":">","35":" ","36":"L","37":"a","38":"b","39":" ","40":"3","41":" ","42":"-","43":" ","44":"R","45":"i","46":"g","47":"h","48":"t","49":"s","50":"i","51":"z","52":"i","53":"n","54":"g","55":" ","56":"c","57":"o","58":"m","59":"p","60":"u","61":"t","62":"e","63":" ","64":"i","65":"n","66":"s","67":"t","68":"a","69":"n","70":"c","71":"e","72":"s","73":" ","74":"<","75":"b","76":"r","77":" ","78":"/","79":">","80":" ","81":"<","82":"/","83":"s","84":"p","85":"a","86":"n","87":">","88":" ","89":")","90":";","description":"Labs / Lab 3 Finops","title":"Labs / Lab 3 Finops"},"relativePagePath":"/Labs/Lab3-finops.mdx","titleType":"page","MdxNode":{"id":"fda89b8e-487f-5fb7-b4d9-11293542001a","children":[],"parent":"a7cd619f-a83f-5cc4-a36b-fe3e075efd34","internal":{"content":"---\r\nexport const Title = () => (\r\n  <span>\r\n    Lab 3 - Rightsizing compute instances\r\n <br />\r\n  </span>\r\n);\r\n---\r\n<InlineNotification kind=\"error\">\r\nReminder: Do NOT click the Execute Actions button!\r\n</InlineNotification>\r\n\r\n## 3.1\tAnalyze a rightsizing recommendation\r\nCompute resources are often the biggest line item on a cloud bill – they can total as much as 50% of the total bill. Hence, it makes sense that the bank starts their FinOps initiative by optimizing their compute resources.\r\n\r\nIn the language of Turbonomic, optimizing compute resources and scaling virtual machines mean the same thing. Lift-and-shift cloud migration strategies typically employ the legacy on-prem model of grossly oversizing their resources. The elastic scaling of the cloud, however, now enables the ability to continuously balance capacity and demand in real time, yielding higher cost efficiency.\r\n\r\nLet’s start by exploring the potential savings that can be realized by scaling virtual machines.\r\n#### Step 3.1.1\r\nClick SHOW ALL on the Potential Savings dashboard.\r\n\r\n![Lab3](images/f-3.1.1.png)\r\n\r\n\r\n#### Step 3.1.2\r\nSelect Virtual Machines under the SCALE category, and point out the details on the Potential Savings dashboard, as highlighted in the screenshot and narration below.\r\n\r\n![Lab3](images/f-3.1.2.png)\r\n\r\nThis dashboard categorizes the specific actions the bank can take to realize their potential savings. Note that the savings actions are classified into three categories:\r\n\r\n- Scale (1): Identifies cost reductions that can be achieved by addressing overprovisioning of compute instances\r\n- Delete (2): Provides recommendations to get rid of unattached storage (we’ll talk more about storage in the next section of this demo)\r\n- Buy (3): Recommends the purchase of highly discounted reserved instances to obtain significantly discounted pricing (we’ll talk more about RIs in the last section of this demo)\r\n\r\nIn this view, the ‘Total Savings’ represents the cost reduction the bank can gain by accepting and executing all the recommended ‘Scale Virtual Machines’ actions.\r\n\r\nLet’s examine the details behind the first virtual machine scaling action.\r\n#### Step 3.1.3\r\nClick DETAILS on the first row.\r\n\r\n![Lab3](images/f-3.1.3.png)\r\n\r\n#### Step 3.1.4\r\nPoint out the Action Details, as highlighted in the screenshot and narration below.\r\n\r\n<InlineNotification>\r\nDo NOT click the EXECUTE ACTION button, as this is a shared demo environment.\r\n</InlineNotification>\r\n\r\n![Lab3](images/f-3.1.4.png)\r\n\r\nThe current instance [m5.4xlarge EC2] is highly underutilized based on the 30-day observation period (1). Turbonomic makes a recommendation to scale down to a different instance [r5a.2xlarge] (2). If this action is taken, the instance utilization will increase from 16% to 31.6% (3), and there will be no change in the memory utilization (4). Making the recommended change will decrease the on-demand price (5) and on-demand monthly cost (6). This would result in an approximate monthly savings of $230.57 for this one instance (7). [Since this is a live application, your savings numbers and percentages may vary slightly.]\r\n\r\nTo understand how Turbonomic derived the on-demand price, on-demand monthly cost, and savings, let’s use Amazon’s AWS EC2 On-Demand Pricing Calculator.\r\n\r\n#### Step 3.1.5\r\nClick [here](https://aws.amazon.com/ec2/pricing/on-demand/)\r\nto be directed to Amazon’s AWS EC2 On-Demand Pricing Calculator (will open in a new tab). Fill out the On-Demand Plans for Amazon EC2 form with the following data:\r\n\r\n 1. Location Type: AWS Region\r\n 2. Region: US East (N. Virginia)\r\n 3- Operating system: Linux\r\n 4. Instance type: All\r\n 5. vCPU: All\r\n 6. Search bar: m5\r\n\r\n![Lab3](images/f-3.1.5.png)\r\n\r\n\r\nWe can see that the current instance [m5.4xlarge] has an on-demand hourly rate of $0.768.\r\n#### Step 3.1.6\r\nIn the search bar of the On-Demand Plans for Amazon EC2 form, enter r5a.\r\n\r\n![Lab3](images/f-3.1.6.png)\r\n\r\n\r\nWe can see that the recommended instance [r5a.2xlarge] has an on-demand hourly rate of $0.452.\r\n#### Step 3.1.7\r\nReturn to the Action Details panel.\r\n\r\n<InlineNotification>\r\nSince this is a shared demo environment, the VMEM PERCENTILE AND AVG. UTILIZATION graph on the right may not appear when you run the demo. Use the screenshot below to understand the analytics generated by the Turbonomic platform.\r\n</InlineNotification>\r\n\r\n![Lab3](images/f-3.1.7.png)\r\n\r\nTurbonomic has a direct integration with AWS to find the current on-demand rates and calculate cost savings. As we return to the Action Details panel, we can see that Turbonomic has already gathered the on-demand hourly rates for the current instance m5.4xlarge ($0.768) and the recommended instance r5a.2xlarge ($0.452) for our convenience and ease of reference (1). As a result, the estimated on-demand monthly cost for the current instance is $560.36 per month and for the recommended instance is $329.80 per month (2).\r\n\r\nBased on this optimization, the bank can save $230.57 per month (3), which is approximately 42% of the cost of the current instance. Note that the potential savings are on the on-demand price. Later in the demo, we will explore how this price can be further optimized by leveraging programmatic discounts like reservations.\r\n\r\nThe ‘Execute Action’ button demonstrates the ability of the Turbonomic platform to execute the recommendations natively from the platform. This provides the IT Ops teams the convenience to act immediately and realize cost savings instantaneously. Moreover, it enhances operational efficiency by avoiding the need to jump between disparate tools and management consoles to implement a cost savings recommendation.\r\n\r\n\r\n#### Step 3.1.8\r\nClick X to close the Action Details panel.\r\n\r\n![Lab3](images/f-3.1.8.png)\r\n\r\nTurbonomic continuously performs these cost optimization calculations in real time across large-scale deployments at CPU speed. Manual operator-driven optimization processes are time-consuming, do not scale, and can’t keep up with the dynamic rate of change.\r\n\r\nMoreover, cloud service providers keep introducing new instance families to improve capabilities and price performance. The Turbonomic platform keeps abreast of these innovations and adds them to its analytics engine, providing the bank with updated recommendations based on the latest cloud offerings.\r\n\r\nLet’s shift gears and look at storage cost optimization.\r\n","type":"Mdx","contentDigest":"c96968e29049d40ad4109c07708cf699","owner":"gatsby-plugin-mdx","counter":2165},"frontmatter":{"0":"e","1":"x","2":"p","3":"o","4":"r","5":"t","6":" ","7":"c","8":"o","9":"n","10":"s","11":"t","12":" ","13":"T","14":"i","15":"t","16":"l","17":"e","18":" ","19":"=","20":" ","21":"(","22":")","23":" ","24":"=","25":">","26":" ","27":"(","28":" ","29":"<","30":"s","31":"p","32":"a","33":"n","34":">","35":" ","36":"L","37":"a","38":"b","39":" ","40":"3","41":" ","42":"-","43":" ","44":"R","45":"i","46":"g","47":"h","48":"t","49":"s","50":"i","51":"z","52":"i","53":"n","54":"g","55":" ","56":"c","57":"o","58":"m","59":"p","60":"u","61":"t","62":"e","63":" ","64":"i","65":"n","66":"s","67":"t","68":"a","69":"n","70":"c","71":"e","72":"s","73":" ","74":"<","75":"b","76":"r","77":" ","78":"/","79":">","80":" ","81":"<","82":"/","83":"s","84":"p","85":"a","86":"n","87":">","88":" ","89":")","90":";","description":"Labs / Lab 3 Finops","title":"Labs / Lab 3 Finops"},"exports":{},"rawBody":"---\r\nexport const Title = () => (\r\n  <span>\r\n    Lab 3 - Rightsizing compute instances\r\n <br />\r\n  </span>\r\n);\r\n---\r\n<InlineNotification kind=\"error\">\r\nReminder: Do NOT click the Execute Actions button!\r\n</InlineNotification>\r\n\r\n## 3.1\tAnalyze a rightsizing recommendation\r\nCompute resources are often the biggest line item on a cloud bill – they can total as much as 50% of the total bill. Hence, it makes sense that the bank starts their FinOps initiative by optimizing their compute resources.\r\n\r\nIn the language of Turbonomic, optimizing compute resources and scaling virtual machines mean the same thing. Lift-and-shift cloud migration strategies typically employ the legacy on-prem model of grossly oversizing their resources. The elastic scaling of the cloud, however, now enables the ability to continuously balance capacity and demand in real time, yielding higher cost efficiency.\r\n\r\nLet’s start by exploring the potential savings that can be realized by scaling virtual machines.\r\n#### Step 3.1.1\r\nClick SHOW ALL on the Potential Savings dashboard.\r\n\r\n![Lab3](images/f-3.1.1.png)\r\n\r\n\r\n#### Step 3.1.2\r\nSelect Virtual Machines under the SCALE category, and point out the details on the Potential Savings dashboard, as highlighted in the screenshot and narration below.\r\n\r\n![Lab3](images/f-3.1.2.png)\r\n\r\nThis dashboard categorizes the specific actions the bank can take to realize their potential savings. Note that the savings actions are classified into three categories:\r\n\r\n- Scale (1): Identifies cost reductions that can be achieved by addressing overprovisioning of compute instances\r\n- Delete (2): Provides recommendations to get rid of unattached storage (we’ll talk more about storage in the next section of this demo)\r\n- Buy (3): Recommends the purchase of highly discounted reserved instances to obtain significantly discounted pricing (we’ll talk more about RIs in the last section of this demo)\r\n\r\nIn this view, the ‘Total Savings’ represents the cost reduction the bank can gain by accepting and executing all the recommended ‘Scale Virtual Machines’ actions.\r\n\r\nLet’s examine the details behind the first virtual machine scaling action.\r\n#### Step 3.1.3\r\nClick DETAILS on the first row.\r\n\r\n![Lab3](images/f-3.1.3.png)\r\n\r\n#### Step 3.1.4\r\nPoint out the Action Details, as highlighted in the screenshot and narration below.\r\n\r\n<InlineNotification>\r\nDo NOT click the EXECUTE ACTION button, as this is a shared demo environment.\r\n</InlineNotification>\r\n\r\n![Lab3](images/f-3.1.4.png)\r\n\r\nThe current instance [m5.4xlarge EC2] is highly underutilized based on the 30-day observation period (1). Turbonomic makes a recommendation to scale down to a different instance [r5a.2xlarge] (2). If this action is taken, the instance utilization will increase from 16% to 31.6% (3), and there will be no change in the memory utilization (4). Making the recommended change will decrease the on-demand price (5) and on-demand monthly cost (6). This would result in an approximate monthly savings of $230.57 for this one instance (7). [Since this is a live application, your savings numbers and percentages may vary slightly.]\r\n\r\nTo understand how Turbonomic derived the on-demand price, on-demand monthly cost, and savings, let’s use Amazon’s AWS EC2 On-Demand Pricing Calculator.\r\n\r\n#### Step 3.1.5\r\nClick [here](https://aws.amazon.com/ec2/pricing/on-demand/)\r\nto be directed to Amazon’s AWS EC2 On-Demand Pricing Calculator (will open in a new tab). Fill out the On-Demand Plans for Amazon EC2 form with the following data:\r\n\r\n 1. Location Type: AWS Region\r\n 2. Region: US East (N. Virginia)\r\n 3- Operating system: Linux\r\n 4. Instance type: All\r\n 5. vCPU: All\r\n 6. Search bar: m5\r\n\r\n![Lab3](images/f-3.1.5.png)\r\n\r\n\r\nWe can see that the current instance [m5.4xlarge] has an on-demand hourly rate of $0.768.\r\n#### Step 3.1.6\r\nIn the search bar of the On-Demand Plans for Amazon EC2 form, enter r5a.\r\n\r\n![Lab3](images/f-3.1.6.png)\r\n\r\n\r\nWe can see that the recommended instance [r5a.2xlarge] has an on-demand hourly rate of $0.452.\r\n#### Step 3.1.7\r\nReturn to the Action Details panel.\r\n\r\n<InlineNotification>\r\nSince this is a shared demo environment, the VMEM PERCENTILE AND AVG. UTILIZATION graph on the right may not appear when you run the demo. Use the screenshot below to understand the analytics generated by the Turbonomic platform.\r\n</InlineNotification>\r\n\r\n![Lab3](images/f-3.1.7.png)\r\n\r\nTurbonomic has a direct integration with AWS to find the current on-demand rates and calculate cost savings. As we return to the Action Details panel, we can see that Turbonomic has already gathered the on-demand hourly rates for the current instance m5.4xlarge ($0.768) and the recommended instance r5a.2xlarge ($0.452) for our convenience and ease of reference (1). As a result, the estimated on-demand monthly cost for the current instance is $560.36 per month and for the recommended instance is $329.80 per month (2).\r\n\r\nBased on this optimization, the bank can save $230.57 per month (3), which is approximately 42% of the cost of the current instance. Note that the potential savings are on the on-demand price. Later in the demo, we will explore how this price can be further optimized by leveraging programmatic discounts like reservations.\r\n\r\nThe ‘Execute Action’ button demonstrates the ability of the Turbonomic platform to execute the recommendations natively from the platform. This provides the IT Ops teams the convenience to act immediately and realize cost savings instantaneously. Moreover, it enhances operational efficiency by avoiding the need to jump between disparate tools and management consoles to implement a cost savings recommendation.\r\n\r\n\r\n#### Step 3.1.8\r\nClick X to close the Action Details panel.\r\n\r\n![Lab3](images/f-3.1.8.png)\r\n\r\nTurbonomic continuously performs these cost optimization calculations in real time across large-scale deployments at CPU speed. Manual operator-driven optimization processes are time-consuming, do not scale, and can’t keep up with the dynamic rate of change.\r\n\r\nMoreover, cloud service providers keep introducing new instance families to improve capabilities and price performance. The Turbonomic platform keeps abreast of these innovations and adds them to its analytics engine, providing the bank with updated recommendations based on the latest cloud offerings.\r\n\r\nLet’s shift gears and look at storage cost optimization.\r\n","fileAbsolutePath":"C:/Users/905693897/github-doug/Turbonomic-1-Day-Partner-Workshop/src/pages/Labs/Lab3-finops.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}